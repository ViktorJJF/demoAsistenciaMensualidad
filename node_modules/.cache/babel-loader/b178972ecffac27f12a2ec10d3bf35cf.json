{"remainingRequest":"/Users/victor/programacion/Masones/node_modules/babel-loader/lib/index.js!/Users/victor/programacion/Masones/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/victor/programacion/Masones/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/victor/programacion/Masones/src/components/common/SmallStats.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/victor/programacion/Masones/src/components/common/SmallStats.vue","mtime":1541078851000},{"path":"/Users/victor/programacion/Masones/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/victor/programacion/Masones/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/victor/programacion/Masones/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/victor/programacion/Masones/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZGVmaW5lLXByb3BlcnRpZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZGVmaW5lLXByb3BlcnR5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvdmljdG9yL3Byb2dyYW1hY2lvbi9NYXNvbmVzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL3ZpY3Rvci9wcm9ncmFtYWNpb24vTWFzb25lcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENoYXJ0IGZyb20gJy4uLy4uL3V0aWxzL2NoYXJ0JzsKaW1wb3J0IHsgbmFub2lkIH0gZnJvbSAnLi4vLi4vdXRpbHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2Qtc21hbGwtc3RhdHMnLAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIFRoZSBlbGVtZW50IElELgogICAgICovCiAgICBpZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAoKICAgIC8qKgogICAgICogVGhlIGxhYmVsLgogICAgICovCiAgICBsYWJlbDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogJ0xhYmVsJwogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSB2YWx1ZS4KICAgICAqLwogICAgdmFsdWU6IHsKICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSwKICAgICAgImRlZmF1bHQiOiAwCiAgICB9LAoKICAgIC8qKgogICAgICogVGhlIHBlcmNlbnRhZ2UgbnVtYmVyIG9yIHN0cmluZy4KICAgICAqLwogICAgcGVyY2VudGFnZTogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICAiZGVmYXVsdCI6IDAKICAgIH0sCgogICAgLyoqCiAgICAgKiBXaGV0aGVyIGlzIGEgdmFsdWUgaW5jcmVhc2UuCiAgICAgKi8KICAgIGluY3JlYXNlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICJkZWZhdWx0IjogdHJ1ZQogICAgfSwKCiAgICAvKioKICAgICAqIFdoZXRoZXIgaXMgYSB2YWx1ZSBkZWNyZWFzZS4KICAgICAqLwogICAgZGVjcmVhc2U6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgImRlZmF1bHQiOiBmYWxzZQogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSBDaGFydC5qcyBvcHRpb25zLgogICAgICovCiAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICAiZGVmYXVsdCI6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSBjaGFydCBkYXRhc2V0LgogICAgICovCiAgICBjaGFydERhdGE6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAiZGVmYXVsdCI6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSBjaGFydCBjb25maWd1cmF0aW9uLiBUaGlzIG1heSBvdmVycmlkZSBldmVyeSBvdGhlciBzZXR0aW5nLgogICAgICovCiAgICBjaGFydENvbmZpZzogewogICAgICB0eXBlOiBPYmplY3QKICAgIH0sCgogICAgLyoqCiAgICAgKiBUaGUgdmFyaWF0aW9uLgogICAgICovCiAgICB2YXJpYXRpb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6IG51bGwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb21wdXRlZENoYXJ0SWQ6IGZ1bmN0aW9uIGNvbXB1dGVkQ2hhcnRJZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuaWQgfHwgInN0YXRzLXNtYWxsLSIuY29uY2F0KG5hbm9pZCgpKTsKICAgIH0sCiAgICBjb21wdXRlZFBlcmNlbnRhZ2VNb2RpZmllcjogZnVuY3Rpb24gY29tcHV0ZWRQZXJjZW50YWdlTW9kaWZpZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLmluY3JlYXNlID8gJ2luY3JlYXNlJyA6ICdkZWNyZWFzZSc7CiAgICB9LAogICAgY29tcHV0ZWRWYXJpYXRpb25DbGFzczogZnVuY3Rpb24gY29tcHV0ZWRWYXJpYXRpb25DbGFzcygpIHsKICAgICAgcmV0dXJuIHRoaXMudmFyaWF0aW9uID8gInN0YXRzLXNtYWxsLS0iLmNvbmNhdCh0aGlzLnZhcmlhdGlvbikgOiBudWxsOwogICAgfSwKICAgIGNvbXB1dGVkQm9keUNsYXNzOiBmdW5jdGlvbiBjb21wdXRlZEJvZHlDbGFzcygpIHsKICAgICAgaWYgKHRoaXMudmFyaWF0aW9uID09PSAnMScpIHsKICAgICAgICByZXR1cm4gJ3AtMCBkLWZsZXgnOwogICAgICB9CgogICAgICByZXR1cm4gJ3B4LTAgcGItMCc7CiAgICB9LAogICAgY29tcHV0ZWRJbm5lcldyYXBwZXJDbGFzczogZnVuY3Rpb24gY29tcHV0ZWRJbm5lcldyYXBwZXJDbGFzcygpIHsKICAgICAgaWYgKHRoaXMudmFyaWF0aW9uID09PSAnMScpIHsKICAgICAgICByZXR1cm4gJ2ZsZXgtY29sdW1uIG0tYXV0byc7CiAgICAgIH0KCiAgICAgIHJldHVybiAncHgtMyc7CiAgICB9LAogICAgY29tcHV0ZWREYXRhRmllbGRDbGFzczogZnVuY3Rpb24gY29tcHV0ZWREYXRhRmllbGRDbGFzcygpIHsKICAgICAgaWYgKHRoaXMudmFyaWF0aW9uID09PSAnMScpIHsKICAgICAgICByZXR1cm4gJ3RleHQtY2VudGVyJzsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAogICAgY29tcHV0ZWRMYWJlbENsYXNzOiBmdW5jdGlvbiBjb21wdXRlZExhYmVsQ2xhc3MoKSB7CiAgICAgIGlmICh0aGlzLnZhcmlhdGlvbiA9PT0gJzEnKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIHJldHVybiAnbWItMSc7CiAgICB9LAogICAgY29tcHV0ZWRWYWx1ZUNsYXNzOiBmdW5jdGlvbiBjb21wdXRlZFZhbHVlQ2xhc3MoKSB7CiAgICAgIGlmICh0aGlzLnZhcmlhdGlvbiA9PT0gJzEnKSB7CiAgICAgICAgcmV0dXJuICdteS0zJzsKICAgICAgfQoKICAgICAgcmV0dXJuICdtLTAnOwogICAgfSwKICAgIGNvbXB1dGVkSW5uZXJEYXRhRmllbGRDbGFzczogZnVuY3Rpb24gY29tcHV0ZWRJbm5lckRhdGFGaWVsZENsYXNzKCkgewogICAgICBpZiAodGhpcy52YXJpYXRpb24gPT09ICcxJykgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CgogICAgICByZXR1cm4gJ3RleHQtcmlnaHQgYWxpZ24taXRlbXMtY2VudGVyJzsKICAgIH0sCiAgICBjb21wdXRlZENhbnZhc0hlaWdodDogZnVuY3Rpb24gY29tcHV0ZWRDYW52YXNIZWlnaHQoKSB7CiAgICAgIGlmICh0aGlzLnZhcmlhdGlvbiA9PT0gJzEnKSB7CiAgICAgICAgcmV0dXJuIDEyMDsKICAgICAgfQoKICAgICAgcmV0dXJuIDYwOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBjaGFydE9wdGlvbnMgPSBfb2JqZWN0U3ByZWFkKHt9LCB7CiAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IHRydWUsCiAgICAgIHJlc3BvbnNpdmU6IHRydWUsCiAgICAgIGxlZ2VuZDogewogICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgIH0sCiAgICAgIHRvb2x0aXBzOiB7CiAgICAgICAgZW5hYmxlZDogZmFsc2UsCiAgICAgICAgY3VzdG9tOiBmYWxzZQogICAgICB9LAogICAgICBlbGVtZW50czogewogICAgICAgIHBvaW50OiB7CiAgICAgICAgICByYWRpdXM6IDAKICAgICAgICB9LAogICAgICAgIGxpbmU6IHsKICAgICAgICAgIHRlbnNpb246IDAuMzMKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHNjYWxlczogewogICAgICAgIHhBeGVzOiBbewogICAgICAgICAgZ3JpZExpbmVzOiBmYWxzZSwKICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfV0sCiAgICAgICAgeUF4ZXM6IFt7CiAgICAgICAgICBncmlkTGluZXM6IGZhbHNlLAogICAgICAgICAgc2NhbGVMYWJlbDogZmFsc2UsCiAgICAgICAgICB0aWNrczogewogICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwKICAgICAgICAgICAgaXNwbGF5OiBmYWxzZSwKICAgICAgICAgICAgLy8gQXZvaWQgZ2V0dGluZyB0aGUgZ3JhcGggbGluZSBjdXQgb2YgYXQgdGhlIHRvcCBvZiB0aGUgY2FudmFzLgogICAgICAgICAgICAvLyBDaGFydC5qcyBidWcgbGluazogaHR0cHM6Ly9naXRodWIuY29tL2NoYXJ0anMvQ2hhcnQuanMvaXNzdWVzLzQ3OTAKICAgICAgICAgICAgc3VnZ2VzdGVkTWF4OiBNYXRoLm1heC5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5jaGFydERhdGFbMF0uZGF0YSkpICsgMQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0KICAgIH0sIHt9LCB0aGlzLmNoYXJ0T3B0aW9ucyk7CgogICAgdmFyIGNoYXJ0Q29uZmlnID0gX29iamVjdFNwcmVhZCh7fSwgewogICAgICB0eXBlOiAnbGluZScsCiAgICAgIGRhdGE6IF9vYmplY3RTcHJlYWQoe30sIHsKICAgICAgICBsYWJlbHM6IFsnTGFiZWwgMScsICdMYWJlbCAyJywgJ0xhYmVsIDMnLCAnTGFiZWwgNCcsICdMYWJlbCA1J10KICAgICAgfSwge30sIHsKICAgICAgICBkYXRhc2V0czogdGhpcy5jaGFydERhdGEKICAgICAgfSksCiAgICAgIG9wdGlvbnM6IGNoYXJ0T3B0aW9ucwogICAgfSwge30sIHRoaXMuY2hhcnRDb25maWcpOwoKICAgIG5ldyBDaGFydCh0aGlzLiRyZWZzLmNhbnZhcywgY2hhcnRDb25maWcpOwogIH0KfTs="},{"version":3,"sources":["SmallStats.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <d-card :class=\"['stats-small', computedVariationClass, 'card', 'card-small']\">\n        <d-card-body :class=\"[computedBodyClass]\">\n            <div :class=\"['d-flex', computedInnerWrapperClass]\">\n                <div :class=\"['stats-small__data', computedDataFieldClass]\">\n                    <span :class=\"['stats-small__label', 'text-uppercase', computedLabelClass]\">{{ label }}</span>\n                    <h6 :class=\"['stats-small__value', 'count', computedValueClass]\">{{ value }}</h6>\n                </div>\n                <div :class=\"['stats-small__data', computedInnerDataFieldClass]\">\n                    <span :class=\"['stats-small__percentage', `stats-small__percentage--${computedPercentageModifier}`]\">{{ percentage }}</span>\n                </div>\n            </div>\n            <canvas :height=\"computedCanvasHeight\" ref=\"canvas\" :class=\"[computedChartId]\"></canvas>\n        </d-card-body>\n    </d-card>\n</template>\n\n<script>\nimport Chart from '../../utils/chart';\nimport { nanoid } from '../../utils';\n\nexport default {\n  name: 'd-small-stats',\n  props: {\n    /**\n     * The element ID.\n     */\n    id: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label.\n     */\n    label: {\n      type: String,\n      default: 'Label',\n    },\n    /**\n     * The value.\n     */\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n    /**\n     * The percentage number or string.\n     */\n    percentage: {\n      type: [Number, String],\n      default: 0,\n    },\n    /**\n     * Whether is a value increase.\n     */\n    increase: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Whether is a value decrease.\n     */\n    decrease: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * The Chart.js options.\n     */\n    chartOptions: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    /**\n     * The chart dataset.\n     */\n    chartData: {\n      type: Array,\n      required: true,\n      default() {\n        return [];\n      },\n    },\n    /**\n     * The chart configuration. This may override every other setting.\n     */\n    chartConfig: {\n      type: Object,\n    },\n    /**\n     * The variation.\n     */\n    variation: {\n      type: String,\n      default: null,\n    },\n  },\n  computed: {\n    computedChartId() {\n      return this.id || `stats-small-${nanoid()}`;\n    },\n    computedPercentageModifier() {\n      return this.increase ? 'increase' : 'decrease';\n    },\n    computedVariationClass() {\n      return this.variation ? `stats-small--${this.variation}` : null;\n    },\n    computedBodyClass() {\n      if (this.variation === '1') {\n        return 'p-0 d-flex';\n      }\n\n      return 'px-0 pb-0';\n    },\n    computedInnerWrapperClass() {\n      if (this.variation === '1') {\n        return 'flex-column m-auto';\n      }\n\n      return 'px-3';\n    },\n    computedDataFieldClass() {\n      if (this.variation === '1') {\n        return 'text-center';\n      }\n\n      return null;\n    },\n    computedLabelClass() {\n      if (this.variation === '1') {\n        return null;\n      }\n\n      return 'mb-1';\n    },\n    computedValueClass() {\n      if (this.variation === '1') {\n        return 'my-3';\n      }\n\n      return 'm-0';\n    },\n    computedInnerDataFieldClass() {\n      if (this.variation === '1') {\n        return null;\n      }\n\n      return 'text-right align-items-center';\n    },\n    computedCanvasHeight() {\n      if (this.variation === '1') {\n        return 120;\n      }\n\n      return 60;\n    },\n  },\n  mounted() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [{\n            gridLines: false,\n            ticks: {\n              display: false,\n            },\n          }],\n          yAxes: [{\n            gridLines: false,\n            scaleLabel: false,\n            ticks: {\n              display: false,\n              isplay: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: Math.max(...this.chartData[0].data) + 1,\n            },\n          }],\n        },\n      },\n      ...this.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: 'line',\n        data: {\n          ...{ labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'] },\n          ...{\n            datasets: this.chartData,\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.chartConfig,\n    };\n\n    new Chart(this.$refs.canvas, chartConfig);\n  },\n};\n</script>\n"],"sourceRoot":"src/components/common"}]}